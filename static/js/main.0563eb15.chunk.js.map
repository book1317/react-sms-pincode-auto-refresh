{"version":3,"sources":["API.js","CopyButton.js","Item.js","App.js","index.js"],"names":["getNewNumber","params","a","apikey","app","country","Promise","resolve","reject","fetch","then","res","console","log","ok","json","result","getAllNumber","error","getMessage","number","getMoney","balance","CopyButton","props","state","isCopy","children","this","style","color","className","onClick","setState","navigator","clipboard","writeText","Component","Item","refreshTime","isRefresh","time","onClickGetMessage","clearInterval","getMessageInterval","setInterval","item","message","timestamp","country_name","app_name","React","App","sound","Audio","address1","address2","address3","allNumber","isLoading","timeGetNumber","isGetNumber","lastErrorMessage","money","setErrorMessage","err","status","statusText","playSound","pause","currentTime","play","refresh","onClickGetNewNumber","getNumberInterval","urlParams","URLSearchParams","window","location","search","get","href","reload","length","map","marginTop","display","open","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0563eb15.chunk.js","sourcesContent":["export const getNewNumber = async (params) => {\r\n    const { apikey, app, country } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(\r\n            `http://api.smspincode.com/user/api/get_number.php?customer=${apikey}&app=${app}&country=${country}`\r\n        ).then(async (res) => {\r\n            console.log(res);\r\n            if (res.ok) {\r\n                console.log('this');\r\n                const result = await res.json();\r\n                console.log(result);\r\n                if (result) {\r\n                    resolve(res);\r\n                }\r\n            }\r\n            console.log('this');\r\n            reject(res);\r\n        });\r\n    });\r\n};\r\n\r\nexport const getAllNumber = async (params) => {\r\n    const { apikey } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(`http://api.smspincode.com/user/api/get_history.php?customer=${apikey}`)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\nexport const getMessage = async (params, number) => {\r\n    const { apikey, app, country } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(\r\n            `http://api.smspincode.com/user/api/get_sms.php?customer=${apikey}&number=${number}&app=${app}&country=${country}`\r\n        ).then(async (res) => {\r\n            console.log(res);\r\n            if (res.ok) {\r\n                const result = await res.json();\r\n                console.log(result);\r\n                resolve(result);\r\n            }\r\n            reject(res);\r\n        });\r\n    });\r\n};\r\n\r\nexport const getMoney = async (params, number) => {\r\n    const { apikey, app, country } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(`https://api.smspincode.com/user/api/get_balance.php?customer=${apikey}`).then(async (res) => {\r\n            console.log(res);\r\n            if (res.ok) {\r\n                const result = await res.json();\r\n                if (result) {\r\n                    resolve(result.balance);\r\n                }\r\n                resolve();\r\n            }\r\n            reject(res);\r\n        });\r\n    });\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass CopyButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isCopy: false };\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { isCopy } = this.state;\r\n        return (\r\n            <div>\r\n                <div\r\n                    style={{ color: isCopy ? 'green' : '' }}\r\n                    className=\"copyButton\"\r\n                    onClick={() => {\r\n                        this.setState({ isCopy: true });\r\n                        navigator.clipboard.writeText(children);\r\n                    }}\r\n                >\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CopyButton;\r\n","import React from 'react';\r\nimport CopyButton from './CopyButton';\r\n\r\nclass Item extends React.Component {\r\n    getMessageInterval;\r\n    refreshTime = 3000;\r\n    state = { isRefresh: false, time: 3 };\r\n\r\n    getMessage = async (number) => {\r\n        await this.props.getMessage(number);\r\n    };\r\n\r\n    onClickGetMessage = async (number) => {\r\n        const { isRefresh } = this.state;\r\n        this.setState({ isRefresh: !isRefresh });\r\n\r\n        if (isRefresh) {\r\n            clearInterval(this.getMessageInterval);\r\n        } else {\r\n            this.getMessage(number);\r\n            this.getMessageInterval = setInterval(async () => {\r\n                const { time } = this.state;\r\n                if (time === 0) {\r\n                    this.setState({ time: 3 });\r\n                } else {\r\n                    this.setState({ time: time - 1 });\r\n                    if (time === 1) {\r\n                        this.getMessage(number);\r\n                    }\r\n                }\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isRefresh, time } = this.state;\r\n        const { item } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <div className=\"getButton\">\r\n                        <button\r\n                            className=\"getButton\"\r\n                            onClick={() => {\r\n                                this.onClickGetMessage(item.number);\r\n                            }}\r\n                        >\r\n                            {isRefresh ? 'Get:' + time : 'Get'}\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n\r\n                <td>\r\n                    <CopyButton>{item.number}</CopyButton>\r\n                </td>\r\n                <td className=\"itemCode\">\r\n                    <div>{item.message}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.timestamp}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.country_name}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.app_name}</div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\nimport { getNewNumber, getAllNumber, getMessage, getMoney } from './API';\nimport './App.css';\nimport Item from './Item';\nimport CopyButton from './CopyButton';\n\nclass App extends React.Component {\n    getNumberInterval;\n    sound = new Audio('https://smspincode.com/user/plucky.mp3');\n\n    state = {\n        params: {\n            apikey: '',\n            app: '',\n            country: '',\n            address1: '',\n            address2: '',\n            address3: '',\n        },\n        allNumber: [],\n        isLoading: true,\n        timeGetNumber: 5,\n        isGetNumber: false,\n        lastErrorMessage: '',\n        money: '',\n    };\n\n    async componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const apikey = urlParams.get('key');\n        const app = urlParams.get('app') || 'foodpanda';\n        const country = urlParams.get('country') || 'thailand';\n        const address1 = urlParams.get('address1');\n        const address2 = urlParams.get('address2');\n        const address3 = urlParams.get('address3');\n        const params = { apikey, app, country, address1, address2, address3 };\n\n        await this.setState({ params });\n        await this.refresh();\n    }\n\n    setErrorMessage = (err) => {\n        const error = err.status + ' : ' + err.statusText;\n        this.setState({ lastErrorMessage: error });\n    };\n\n    playSound = () => {\n        this.sound.pause();\n        this.sound.currentTime = 0;\n        this.sound.play();\n    };\n\n    refresh = async () => {\n        try {\n            const { params } = this.state;\n\n            this.setState({ isLoading: true });\n            const money = await getMoney(params);\n            const allNumber = await getAllNumber(params);\n            this.setState({ allNumber, money });\n        } catch (err) {\n            this.setErrorMessage(err);\n        }\n        this.setState({ isLoading: false });\n    };\n\n    getNewNumber = async () => {\n        try {\n            const { params } = this.state;\n            await getNewNumber(params);\n            this.refresh();\n            this.playSound();\n        } catch (err) {\n            console.log('this');\n            this.setErrorMessage(err);\n        }\n    };\n\n    getMessage = async (number) => {\n        try {\n            const { params } = this.state;\n            await getMessage(params, number);\n            this.refresh();\n            this.playSound();\n        } catch (err) {\n            this.setErrorMessage(err);\n        }\n    };\n\n    onClickGetNewNumber = async () => {\n        const { isGetNumber } = this.state;\n        if (isGetNumber) {\n            clearInterval(this.getNumberInterval);\n        } else {\n            this.getNewNumber();\n            this.getNumberInterval = setInterval(async () => {\n                const { timeGetNumber } = this.state;\n                if (timeGetNumber === 0) {\n                    this.setState({ timeGetNumber: 5 });\n                } else {\n                    this.setState({ timeGetNumber: timeGetNumber - 1 });\n                    if (timeGetNumber === 1) {\n                        this.getNewNumber();\n                    }\n                }\n            }, 1000);\n        }\n        this.setState({ isGetNumber: !isGetNumber });\n    };\n\n    render() {\n        const { allNumber, isLoading, isGetNumber, timeGetNumber, params, lastErrorMessage, money } = this.state;\n        const { apikey, app, country, address1, address2, address3 } = params;\n\n        return (\n            <div className=\"App\">\n                <div className=\"title\">BooKy SMS Pincode</div>\n                <div className=\"subTitle\">\n                    <div>\n                        Key :{' '}\n                        {apikey ? (\n                            apikey\n                        ) : (\n                            <span>\n                                {'ไปใส่ APIKey ด้วย -> '}\n                                <a href=\"https://smspincode.com/user/settings.php\">\n                                    https://smspincode.com/user/settings.php\n                                </a>\n                            </span>\n                        )}\n                    </div>\n                    <div>\n                        {app} : {country}\n                    </div>\n                    <div className=\"greenText\">Money : {money}$</div>\n                </div>\n                {/* <Input label=\"API Key\" /> */}\n                <button onClick={this.onClickGetNewNumber}>Get Number{isGetNumber && ':' + timeGetNumber}</button>\n                <button className=\"refreshButton\" onClick={this.refresh}>\n                    Refresh\n                </button>\n                <button\n                    className=\"refreshButton\"\n                    onClick={() => {\n                        window.location.reload();\n                    }}\n                >\n                    Stop all\n                </button>\n                <span className=\"loading\">{isLoading && 'Loading...'}</span>\n                {lastErrorMessage && <div className=\"errorMessage\">Last Error : {lastErrorMessage}</div>}\n\n                <div className=\"table\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td className=\"headTableButton\"></td>\n                                <td className=\"headTable\">Number</td>\n                                <td className=\"headTableCode\">Code</td>\n                                <td className=\"headTable\">Time</td>\n                                <td className=\"headTable\">Country</td>\n                                <td className=\"headTable\">App</td>\n                            </tr>\n                            {allNumber.length > 0 &&\n                                allNumber.map((item) => (\n                                    <Item key={item.timestamp} item={item} getMessage={this.getMessage} />\n                                ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"howto\">\n                    <div className=\"howtoTitle\">ข้อมูล {'(กดเพื่อคัดลอก)'}</div>\n                    <CopyButton>\n                        {address1 || '19 Lat Phrao 1 Alley, Lane 8 Khwaeng Chom Phon Krung Thep Maha Nakhon 10900'}\n                    </CopyButton>\n                    <CopyButton>{address2 || 'สมคิดแมนชั่น ตึกสีเทา'}</CopyButton>\n                    <CopyButton>\n                        {address3 ||\n                            'ลาดพร้ว ซ.1 แยก 8 เกือบสุดซอย หน้าตึกเขียนว่าสมคิดแมนชั่น ถึงแล้วโทรมาเบอร์นี้ 0884015974 ครับ'}\n                    </CopyButton>\n                    <CopyButton>HOORAY100</CopyButton>\n                    <CopyButton>FPDSS100</CopyButton>\n                    <CopyButton>godoffood001@gmail.com</CopyButton>\n                </div>\n\n                <div className=\"howto\">\n                    <div className=\"howtoTitle\">วิธีใช้ ใส่ลิงค์ตามนี้</div>\n                    <div className=\"example\">\n                        https://book1317.github.io/react-sms-pincode-auto-refresh?key=\n                        <span className=\"redText\">{'{APIkey}'}</span>\n                        {'&'}app=<span className=\"redText\">{'{app}'}</span>\n                        {'&'}country=<span className=\"redText\">{'{country}'}</span>\n                        {'&'}address1=<span className=\"redText\">{'{address1}'}</span>\n                        {'&'}address2=<span className=\"redText\">{'{address2}'}</span>\n                        {'&'}address3=<span className=\"redText\">{'{address3}'}</span>\n                    </div>\n                    <div>\n                        <span className=\"redText\">APIkey</span> = 1101600d8fa7e22bxxxxxxxxxxxxxxxxxxxxxxxxx\n                        {' (required)'} from{' '}\n                        <a href=\"https://smspincode.com/user/settings.php\">https://smspincode.com/user/settings.php</a>{' '}\n                    </div>\n                    <div>\n                        <span className=\"redText\">app</span> = foodpanda {'(defualt)'}\n                    </div>\n                    <div>\n                        <span className=\"redText\">country</span> = thailand {'(defualt)'}\n                    </div>\n                    <div>\n                        <span className=\"redText\">address1</span>\n                    </div>\n                    <div>\n                        <span className=\"redText\">address2</span>\n                    </div>\n                    <div>\n                        <span className=\"redText\">address3</span>\n                    </div>\n\n                    <a\n                        style={{ marginTop: '10px', display: 'block' }}\n                        onClick={() => {\n                            window.open('https://www.foodpanda.co.th/contents/deals');\n                        }}\n                        href=\"#\"\n                    >\n                        https://www.foodpanda.co.th/contents/deals\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}