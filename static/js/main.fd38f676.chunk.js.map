{"version":3,"sources":["API.js","Item.js","App.js","index.js"],"names":["getNewNumber","params","a","apikey","app","country","Promise","resolve","reject","fetch","then","res","console","log","ok","getAllNumber","json","result","error","getMessage","number","Item","refreshTime","state","isRefresh","time","props","onClickGetMessage","setState","clearInterval","getMessageInterval","setInterval","this","item","className","onClick","message","timestamp","country_name","app_name","React","Component","App","sound","Audio","allNumber","isLoading","timeGetNumber","isGetNumber","lastErrorMessage","setErrorMessage","err","status","statusText","playSound","pause","currentTime","play","refresh","onClickGetNewNumber","getNumberInterval","urlParams","URLSearchParams","window","location","search","get","href","reload","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd38f676.chunk.js","sourcesContent":["export const getNewNumber = async (params) => {\r\n    const { apikey, app, country } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(\r\n            `http://api.smspincode.com/user/api/get_number.php?customer=${apikey}&app=${app}&country=${country}`\r\n        ).then((res) => {\r\n            console.log(res);\r\n            if (!res.ok) {\r\n                reject(res);\r\n            }\r\n            resolve(res);\r\n        });\r\n    });\r\n};\r\n\r\nexport const getAllNumber = async (params) => {\r\n    const { apikey } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(`http://api.smspincode.com/user/api/get_history.php?customer=${apikey}`)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\nexport const getMessage = async (params, number) => {\r\n    const { apikey, app, country } = params;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(\r\n            `http://api.smspincode.com/user/api/get_sms.php?customer=${apikey}&number=${number}&app=${app}&country=${country}`\r\n        ).then((res) => {\r\n            console.log(res);\r\n            if (!res.ok) {\r\n                reject(res);\r\n            }\r\n            resolve(res);\r\n        });\r\n    });\r\n};\r\n","import React from 'react';\r\n\r\nclass Item extends React.Component {\r\n    getMessageInterval;\r\n    refreshTime = 3000;\r\n    state = { isRefresh: false, time: 3 };\r\n\r\n    getMessage = async (number) => {\r\n        await this.props.getMessage(number);\r\n    };\r\n\r\n    onClickGetMessage = async (number) => {\r\n        const { isRefresh } = this.state;\r\n        this.setState({ isRefresh: !isRefresh });\r\n\r\n        if (isRefresh) {\r\n            clearInterval(this.getMessageInterval);\r\n        } else {\r\n            this.getMessage(number);\r\n            this.getMessageInterval = setInterval(async () => {\r\n                const { time } = this.state;\r\n                if (time === 0) {\r\n                    this.setState({ time: 3 });\r\n                } else {\r\n                    this.setState({ time: time - 1 });\r\n                    if (time === 1) {\r\n                        this.getMessage(number);\r\n                    }\r\n                }\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isRefresh, time } = this.state;\r\n        const { item } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <div className=\"getButton\">\r\n                        <button\r\n                            className=\"getButton\"\r\n                            onClick={() => {\r\n                                this.onClickGetMessage(item.number);\r\n                            }}\r\n                        >\r\n                            {isRefresh ? 'Get:' + time : 'Get'}\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n\r\n                <td>\r\n                    <div>{item.number}</div>\r\n                </td>\r\n                <td className=\"itemCode\">\r\n                    <div>{item.message}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.timestamp}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.country_name}</div>\r\n                </td>\r\n                <td>\r\n                    <div>{item.app_name}</div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\nimport { getNewNumber, getAllNumber, getMessage } from './API';\nimport './App.css';\nimport Item from './Item';\n\nclass App extends React.Component {\n    getNumberInterval;\n    sound = new Audio('https://smspincode.com/user/plucky.mp3');\n\n    state = {\n        params: {\n            apikey: '',\n            app: '',\n            country: '',\n        },\n        allNumber: [],\n        isLoading: true,\n        timeGetNumber: 5,\n        isGetNumber: false,\n        lastErrorMessage: '',\n    };\n\n    async componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const apikey = urlParams.get('key');\n        const app = urlParams.get('app') || 'foodpanda';\n        const country = urlParams.get('country') || 'thailand';\n        const params = { apikey, app, country };\n\n        await this.setState({ params });\n        await this.refresh();\n    }\n\n    setErrorMessage = (err) => {\n        const error = err.status + ' : ' + err.statusText;\n        this.setState({ lastErrorMessage: error });\n    };\n\n    playSound = () => {\n        this.sound.pause();\n        this.sound.currentTime = 0;\n        this.sound.play();\n    };\n\n    refresh = async () => {\n        try {\n            const { params } = this.state;\n\n            this.setState({ isLoading: true });\n            const allNumber = await getAllNumber(params);\n            this.setState({ allNumber });\n        } catch (err) {\n            this.setErrorMessage(err);\n        }\n        this.setState({ isLoading: false });\n    };\n\n    getNewNumber = async () => {\n        try {\n            const { params } = this.state;\n            await getNewNumber(params);\n            this.playSound();\n        } catch (err) {\n            this.setErrorMessage(err);\n        }\n        this.refresh();\n    };\n\n    onClickGetNewNumber = async () => {\n        const { isGetNumber } = this.state;\n        if (isGetNumber) {\n            clearInterval(this.getNumberInterval);\n        } else {\n            this.getNewNumber();\n            this.getNumberInterval = setInterval(async () => {\n                const { timeGetNumber } = this.state;\n                if (timeGetNumber === 0) {\n                    this.setState({ timeGetNumber: 5 });\n                } else {\n                    this.setState({ timeGetNumber: timeGetNumber - 1 });\n                    if (timeGetNumber === 1) {\n                        this.getNewNumber();\n                    }\n                }\n            }, 1000);\n        }\n        this.setState({ isGetNumber: !isGetNumber });\n    };\n\n    getMessage = async (number) => {\n        try {\n            const { params } = this.state;\n            await getMessage(params, number);\n            this.playSound();\n        } catch (err) {\n            this.setErrorMessage(err);\n        }\n        this.refresh();\n    };\n\n    render() {\n        const { allNumber, isLoading, isGetNumber, timeGetNumber, params, lastErrorMessage } = this.state;\n        const { apikey, app, country } = params;\n\n        return (\n            <div className=\"App\">\n                <div className=\"title\">BooKy SMS Pincode</div>\n                <div className=\"subTitle\">\n                    <div>\n                        Key :{' '}\n                        {apikey ? (\n                            apikey\n                        ) : (\n                            <span>\n                                {'ไปใส่ APIKey ด้วย -> '}\n                                <a href=\"https://smspincode.com/user/settings.php\">\n                                    https://smspincode.com/user/settings.php\n                                </a>\n                            </span>\n                        )}\n                    </div>\n                    <div>\n                        {app} : {country}\n                    </div>\n                </div>\n                {/* <Input label=\"API Key\" /> */}\n                <button onClick={this.onClickGetNewNumber}>Get Number{isGetNumber && ':' + timeGetNumber}</button>\n                <button className=\"refreshButton\" onClick={this.refresh}>\n                    Refresh\n                </button>\n                <button\n                    className=\"refreshButton\"\n                    onClick={() => {\n                        window.location.reload();\n                    }}\n                >\n                    Stop all\n                </button>\n                <span className=\"loading\">{isLoading && 'Loading...'}</span>\n                {lastErrorMessage && <div className=\"errorMessage\">Last Error : {lastErrorMessage}</div>}\n\n                <div className=\"table\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td className=\"headTableButton\"></td>\n                                <td className=\"headTable\">Number</td>\n                                <td className=\"headTableCode\">Code</td>\n                                <td className=\"headTable\">Time</td>\n                                <td className=\"headTable\">Country</td>\n                                <td className=\"headTable\">App</td>\n                            </tr>\n                            {allNumber.length > 0 &&\n                                allNumber.map((item, index) => (\n                                    <Item key={index} item={item} getMessage={this.getMessage} />\n                                ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}